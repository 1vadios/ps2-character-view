vertexshader OpaqueVertexShaders[2] = 
{
//listing for: OpaqueVertexShaders[0]
asm {
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   bool g_inForeground;
//   float4x4 g_virtualViewMatrix;
//   float4 g_virtualViewOffset;
//   float4x4 g_worldMatrix;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_worldMatrix       c0       4
//   g_virtualViewMatrix c4       4
//   g_virtualViewOffset c8       1
//   g_inForeground      c9       1
//

    preshader
    mul r0.xyz, c4.x, c0.xyz
    mul r1.xyz, c4.y, c1.xyz
    add r2.xyz, r0.xyz, r1.xyz
    mul r0.xyz, c4.z, c2.xyz
    add r1.xyz, r0.xyz, r2.xyz
    mul r0.xyz, c4.w, c3.xyz
    add c192.xyz, r0.xyz, r1.xyz
    mul r0.xyz, c5.x, c0.xyz
    mul r1.xyz, c5.y, c1.xyz
    add r2.xyz, r0.xyz, r1.xyz
    mul r0.xyz, c5.z, c2.xyz
    add r1.xyz, r0.xyz, r2.xyz
    mul r0.xyz, c5.w, c3.xyz
    add c193.xyz, r0.xyz, r1.xyz
    mul r0.xyz, c6.x, c0.xyz
    mul r1.xyz, c6.y, c1.xyz
    add r2.xyz, r0.xyz, r1.xyz
    mul r0.xyz, c6.z, c2.xyz
    add r1.xyz, r0.xyz, r2.xyz
    mul r0.xyz, c6.w, c3.xyz
    add c194.xyz, r0.xyz, r1.xyz
    mul r0, c4.x, c0
    mul r1, c4.y, c1
    add r2, r0, r1
    mul r0, c4.z, c2
    add r1, r0, r2
    mul r0, c4.w, c3
    add r2, r0, r1
    mov c195.xyz, r2.xyz
    mov r0.x, r2.w
    mul r1, c5.x, c0
    mul r2, c5.y, c1
    add r3, r1, r2
    mul r1, c5.z, c2
    add r2, r1, r3
    mul r1, c5.w, c3
    add r3, r1, r2
    mov r0.y, r3.w
    mov c196.xyz, r3.xyz
    mul r1, c6.x, c0
    mul r2, c6.y, c1
    add r3, r1, r2
    mul r1, c6.z, c2
    add r2, r1, r3
    mul r1, c6.w, c3
    add r3, r1, r2
    mov r0.z, r3.w
    mov c197.xyz, r3.xyz
    neg r1.x, c9.x
    ge r2.x, r1.x, c9.x
    mul r1.xyz, r2.x, c8.xyz
    mul r3, r2.x, c8
    add r2.xyz, r0.xyz, r1.xyz
    mov c195.w, r2.x
    mov c196.w, r2.y
    mov c197.w, r2.z
    mul r1, c7.x, c0
    mul r2, c7.y, c1
    add r4, r1, r2
    mul r1, c7.z, c2
    add r2, r1, r4
    mul r1, c7.w, c3
    add r4, r1, r2
    mov r0.w, r4.w
    mov c201.xyz, r4.xyz
    add r1, r0, r3
    mov c198.x, r1.x
    mov c199.x, r1.y
    mov c200.x, r1.z
    mov c201.w, r1.w

// approximately 70 instructions used
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4x3 g_boneMatrices[64];
//   float g_foregroundWScale;
//   float g_foregroundZBias;
//   float g_foregroundZScale;
//   bool g_inForeground;
//   float4x4 g_projMatrix;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   g_boneMatrices     c0     192
//   g_projMatrix       c202     4
//   g_inForeground     c206     1
//   g_foregroundZScale c207     1
//   g_foregroundZBias  c208     1
//   g_foregroundWScale c209     1
//

    vs_3_0
    def c210, 2, -1, 1, 3.98440552
    def c211, 64, 3, 1, 0
    dcl_position v0  // IN<0,1,2>
    dcl_blendweight v1  // IN<3,4,5>
    dcl_blendindices v2  // IN<6,7,8,9>
    dcl_tangent v3  // IN<10,11,12,13>
    dcl_binormal v4  // IN<14,15,16>
    dcl_texcoord v5  // IN<17,18>
    dcl_texcoord1 v6  // IN<19,20>
    dcl_texcoord2 v7  // IN<21,22>
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xy
    dcl_texcoord2 o3            // tangent
    dcl_texcoord3 o4.xyz        // binormal
    dcl_texcoord4 o5.xyz        // normal?

#line 209 "X:\Planetside2\Main\Code\Application\Graphics\Shaders\character.fx"
    dp3 r0.x, v1, c210.z
    add r0.x, -r0.x, c210.z  // ::convertedBlendWeights<3>

#line 10 "Skinning.fxh"
    mul r1, c210.w, v2.zyxw
    frc r1, r1
    mul r1, r1, c211.x
    frc r2, r1
    add r1, r1, -r2  // SkinDeform::indices<0,1,2,3>

#line 16
    mul r1, r1, c211.y
    mova a0, r1.yxzw

#line 203 "X:\Planetside2\Main\Code\Application\Graphics\Shaders\character.fx"
    mad r0.yzw, v3.xxyz, c210.x, c210.y  // ::rigid_modelSpaceTangent<0,1,2>

#line 14 "Skinning.fxh"
    dp3 r2.x, r0.yzww, c0[a0.x]
    dp3 r2.y, r0.yzww, c1[a0.x]
    dp3 r2.z, r0.yzww, c2[a0.x]
    mul r2.xyz, r2, v1.y
    dp3 r3.x, r0.yzww, c0[a0.y]
    dp3 r3.y, r0.yzww, c1[a0.y]
    dp3 r3.z, r0.yzww, c2[a0.y]
    mad r2.xyz, r3, v1.x, r2  // ::result<0,1,2>
    dp3 r1.x, r0.yzww, c0[a0.z]
    dp3 r1.y, r0.yzww, c1[a0.z]
    dp3 r1.z, r0.yzww, c2[a0.z]
    mad r1.xyz, r1, v1.z, r2  // ::result<0,1,2>
    dp3 r2.x, r0.yzww, c0[a0.w]
    dp3 r2.y, r0.yzww, c1[a0.w]
    dp3 r2.z, r0.yzww, c2[a0.w]
    mad r0.yzw, r2.xxyz, r0.x, r1.xxyz  // ::result<0,1,2>

#line 126 "Common.fxh"
    dp3 o3.x, r0.yzww, c192  // ::VS<10>
    dp3 o3.y, r0.yzww, c193  // ::VS<11>
    dp3 o3.z, r0.yzww, c194  // ::VS<12>

#line 204 "X:\Planetside2\Main\Code\Application\Graphics\Shaders\character.fx"
    mad r0.yzw, v4.xxyz, c210.x, c210.y  // ::rigid_modelSpaceBitangent<0,1,2>

#line 14 "Skinning.fxh"
    dp3 r1.x, r0.yzww, c0[a0.x]
    dp3 r1.y, r0.yzww, c1[a0.x]
    dp3 r1.z, r0.yzww, c2[a0.x]
    mul r1.xyz, r1, v1.y
    dp3 r2.x, r0.yzww, c0[a0.y]
    dp3 r2.y, r0.yzww, c1[a0.y]
    dp3 r2.z, r0.yzww, c2[a0.y]
    mad r1.xyz, r2, v1.x, r1  // ::result<0,1,2>
    dp3 r2.x, r0.yzww, c0[a0.z]
    dp3 r2.y, r0.yzww, c1[a0.z]
    dp3 r2.z, r0.yzww, c2[a0.z]
    mad r1.xyz, r2, v1.z, r1  // ::result<0,1,2>
    dp3 r2.x, r0.yzww, c0[a0.w]
    dp3 r2.y, r0.yzww, c1[a0.w]
    dp3 r2.z, r0.yzww, c2[a0.w]
    mad r0.yzw, r2.xxyz, r0.x, r1.xxyz  // ::result<0,1,2>

#line 126 "Common.fxh"
    dp3 o4.x, r0.yzww, c192  // ::VS<14>
    dp3 o4.y, r0.yzww, c193  // ::VS<15>
    dp3 o4.z, r0.yzww, c194  // ::VS<16>

#line 13 "Skinning.fxh"
    mad r1, v0.xyzx, c211.zzzw, c211.wwwz
    dp4 r2.x, r1, c0[a0.x]
    dp4 r2.y, r1, c1[a0.x]
    dp4 r2.z, r1, c2[a0.x]
    mul r0.yzw, r2.xxyz, v1.y
    dp4 r2.x, r1, c0[a0.y]
    dp4 r2.y, r1, c1[a0.y]
    dp4 r2.z, r1, c2[a0.y]
    mad r0.yzw, r2.xxyz, v1.x, r0  // ::result<0,1,2>
    dp4 r2.x, r1, c0[a0.z]
    dp4 r2.y, r1, c1[a0.z]
    dp4 r2.z, r1, c2[a0.z]
    mad r0.yzw, r2.xxyz, v1.z, r0  // ::result<0,1,2>
    dp4 r2.x, r1, c0[a0.w]
    dp4 r2.y, r1, c1[a0.w]
    dp4 r2.z, r1, c2[a0.w]
    mad r0.xyz, r2, r0.x, r0.yzww  // ::result<0,1,2>

#line 126 "Common.fxh"
    mov r0.w, c210.z
    dp4 o5.x, r0, c195  // ::VS<17>
    dp4 o5.y, r0, c196  // ::VS<18>
    dp4 o5.z, r0, c197  // ::VS<19>
    mov r1.xyz, c195
    mov r1.w, c198.x
    dp4 r1.x, r0, r1  // ::ModelToViewSpace<0>
    mov r2.xyz, c196
    mov r2.w, c199.x
    dp4 r1.y, r0, r2  // ::ModelToViewSpace<1>
    mov r2.xyz, c197
    mov r2.w, c200.x
    dp4 r1.z, r0, r2  // ::ModelToViewSpace<2>
    dp4 r1.w, r0, c201  // ::ModelToViewSpace<3>

#line 86
    dp4 r0.x, r1, c202
    dp4 r0.y, r1, c203
    dp4 r0.z, r1, c204
    dp4 r0.w, r1, c205
    mul r0, r0, c210.zyzz  // ::ViewToClipSpace<0,1,2,3>

#line 61
    mov r1.x, c207.x  // ::g_foregroundZScale<0>
    mad r1.z, r0.z, r1.x, c208.x  // FixupForegroundZ::clipCoord<2>
    mov r1.w, r0.w

#line 259 "X:\Planetside2\Main\Code\Application\Graphics\Shaders\character.fx"
    mad r1.xy, r1.zwzw, c209.x, -r0.zwzw
    mad o0.zw, c206.x, r1.xyxy, r0  // ::VS<2,3>

#line 86 "Common.fxh"
    mov o0.xy, r0  // ::VS<0,1>

#line 343 "X:\Planetside2\Main\Code\Application\Graphics\Shaders\character.fx"
    mad o3.w, v3.w, c210.x, c210.y  // ::VS<13>

#line 339
    mov o1.xy, v5  // ::VS<4,5>
    mov o1.zw, v6.xyxy  // ::VS<6,7>
    mov o2.xy, v7  // ::VS<8,9>

// approximately 95 instruction slots used
}};
pixelshader OpaquePixelShaders[2] = 
{
//listing for: OpaquePixelShaders[1]
asm {
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float g_DecalTintRotation;
//   int g_DecalUVSet;
//   float g_objectID;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_objectID          c0       1
//   g_DecalUVSet        c1       1
//   g_DecalTintRotation c2       1
//

    preshader
    add r0.xyz, c1.x, (-0, -1, -2)
    neg r1.xyz, r0.xyz
    max c0.xyz, r0.xyz, r1.xyz
    mul c3.x, c0.x, (0.00392156863)
    mul r0.x, c2.x, (0.159154943)
    add r1.x, r0.x, (0.5)
    frc r0.x, r1.x
    mul r1.x, r0.x, (6.28318531)
    add r0.x, r1.x, (-3.14159265)
    cos r1.x, r0.x
    sin r1.y, r0.x
    mov c1.x, r1.y
    mov c2.x, r1.x

// approximately 13 instructions used
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   sampler2D g_BaseDiffuseSampler;
//   sampler2D g_BumpSampler;
//   float3 g_DecalTintHighlight;
//   float3 g_DecalTintMidtone;
//   sampler2D g_DecalTintSampler;
//   float2 g_DecalTintScale;
//   float3 g_DecalTintShadow;
//   float2 g_DecalTintTranslation;
//   samplerCUBE g_DetailBumpSampler;
//   float g_DetailBumpiness;
//   float g_DetailFreq;
//   sampler2D g_DetailMaskSampler;
//   bool g_ShowDecalTint;
//   bool g_ShowTilingTint;
//   sampler2D g_SpecSampler;
//   float3 g_TilingTintHighlight;
//   float3 g_TilingTintMidtone;
//   float g_TilingTintOpacity;
//   sampler2D g_TilingTintSampler;
//   float g_TilingTintScale;
//   float3 g_TilingTintShadow;
//
//
// Registers:
//
//   Name                   Reg   Size
//   ---------------------- ----- ----
//   g_ShowTilingTint       b0       1
//   g_ShowDecalTint        b1       1
//   g_TilingTintScale      c4       1
//   g_TilingTintHighlight  c5       1
//   g_TilingTintMidtone    c6       1
//   g_TilingTintShadow     c7       1
//   g_TilingTintOpacity    c8       1
//   g_DecalTintTranslation c9       1
//   g_DecalTintScale       c10      1
//   g_DecalTintHighlight   c11      1
//   g_DecalTintMidtone     c12      1
//   g_DecalTintShadow      c13      1
//   g_DetailFreq           c14      1
//   g_DetailBumpiness      c15      1
//   g_TilingTintSampler    s0       1
//   g_DecalTintSampler     s1       1
//   g_BaseDiffuseSampler   s2       1
//   g_BumpSampler          s3       1
//   g_SpecSampler          s4       1
//   g_DetailBumpSampler    s5       1
//   g_DetailMaskSampler    s6       1
//

    ps_3_0
    def c16, 1, 2, -1, -0.5
    def c17, 255, -250, 1.41421354, 128
    def c18, -1, 1, 0, 0.166666672
    def c19, 1, 0, 0.5, 0.00392156886
    def c20, 0.501960814, 0, 0, 0
    def c21, 2, 1, -1, 0
    dcl_texcoord v0  // IN<4,5,6,7>
    dcl_texcoord1 v1.xy  // IN<8,9>
    dcl_texcoord2 v2  // IN<10,11,12,13>    // tangent
    dcl_texcoord3 v3.xyz  // IN<14,15,16>   // binormal
    dcl_texcoord4 v4.xyw  // IN<17,18,20>   // normal?
    dcl_texcoord5 v5.xyw  // IN<21,22,24>
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_cube g_DetailBumpSampler
    dcl_2d g_DetailMaskSampler

#line 269 "X:\Planetside2\Main\Code\Application\Graphics\Shaders\character.fx"
    texld r0, v0, s3  // ::rawBump<1,2,3>

    texld r1, v0, s4  // ::specularValues<0,1,2,3>

#line 280
    texld r2, v0, s2  // ::albedo<0,1,2>

#line 103 "Tint.fxh"
    if g_ShowTilingTint
    else
      mov r3.yz, r1.xyxw  // ApplyTint::dielectric<0>, ApplyTint::metallic<0>
      mov r0.x, r1.w  // ApplyTint::roughness<0>
    endif

#line 73
    if g_ShowDecalTint
    else
      mov r0.z, c18.z  // ApplyDecal::emissive<0>
    endif

#line 285 "X:\Planetside2\Main\Code\Application\Graphics\Shaders\character.fx"
    add r0.z, r0.z, r1.z  // ::emissive<0>

#line 232 "Common.fxh"
    mad r0.yw, r0.xwzy, c16.y, c16.z  // ::normal<0,1>
    dp2add_sat r1.x, r0.ywzw, r0.ywzw, c18.z
    add r1.x, -r1.x, c16.x
    rsq r1.x, r1.x
    rcp r1.x, r1.x  // ::normal<2>

#line 291 "X:\Planetside2\Main\Code\Application\Graphics\Shaders\character.fx"
    texld r4, v0, s6  // ::v3DetailSelect<0,1,2>
    // v3DetailSelect = texld(g_DetailMaskSampler, v0);

#line 273 "Common.fxh"
    mad r1.yzw, r4.xxyz, c16.y, c16.z  // ::mask<0,1,2>
    // r1.yzw = r4.xxyz * 2.0 - 1.0;
    
    // c4 = g_DetailFreq

    mul r4.xy, c14.x, v0.zwzw  // DetailBump::texCoord<0,1>
    // texCoord.xy = c14.x * vUv2;

#line 277
    frc r4.xy, r4
    // r4.xy = r4 - round_ni(r4)

    add r4.xy, r4, c16.w  // ::cubeCoord<1,2>
    // cubeCoord.xy = r4 - 0.5;

#line 292
    cmp r5.xyz, -r1.yzww, c18.z, c18.y
    cmp r6.xyz, r1.yzww, -c18.z, -c18.y
    add r5.xyz, r5, r6

#line 284
    mov r4.z, -c16.w
    // r4.z = 0.5

    mul r6.xyz, r4.zxyw, r5.x
    // r6.xyz = r4.zxyw * r5.x

    texld r6, r6, g_DetailBumpSampler  // DecodeDNormCube::sample<0,1,3>
    // sample1 = texld(g_DetailBumpSampler, r6)

// def c21, 2, 1, -1, 0
    mad r6.xyz, r6.wyxw, c21.xxyw, c21.zzww
    // sample1.xyz = sample1.wyx * c21.xxy + c21.zzw

#line 288
    mul r5.xyw, r4.yzzx, r5.y
    // r5.xyw = r4.yzz * r5.y

    texld r7, r5.xyww, g_DetailBumpSampler  // DecodeDNormCube::sample<0,1,3>
    // r7 = texld(g_DetailBumpSampler, r5.xyw)

    mad r5.xyw, r7.wyzx, c21.xxzy, c21.zzzw
    // r5.xyw = r7.wyz * c21.xxz + c21.zzz

    mul r5.xyw, r1_abs.z, r5
    // r5.xyw = abs(r1.z) * r5.xyz

    mad r5.xyw, r1_abs.y, r6.xyzz, r5  // ::result<0,1,2>
    // r5.xyw = abs(r1.y) * r6.xyz + r5.xyz

#line 292
    mul r4.xyz, r4, r5.z
    // r4.xyz = r4.xyz * r5.z

    texld r4, r4, g_DetailBumpSampler  // DecodeDNormCube::sample<0,1,3>
    // r4 = texld(g_DetailBumpSampler, r4.xyz)

    mad r4.xyz, r4.wyxw, c21.xxyw, c21.zzww
    // r4.xyz = r4.wyx * c21.xxy + c21.zzw

    mad r1.yzw, r1_abs.w, r4.xxyz, r5.xxyw  // ::result<0,1,2>
    // r1.yzw = abs(r1.w) * r4.xxy + r5.xxy

    mul r1.yz, r1, c15.x
    // r1.yz = r1.xy * c15.x

    mad r4.xy, v2.w, c19, c19.yzzw
    // r4.xy = v2.w * c19.xy + c19.yz

    mul r4.xy, r1.yzzw, r4  // ::result<1>
    // r4.xy = r1.yz * r4.xy

#line 304
    mul r1.y, r1.w, r1.w  // ::finalStdDev<0>
    // r1.y = r1.w * r1.w

    mul r1.y, r1.y, c15.x
    // r1.y = r1.y * c15.x

#line 308
    // def c16, 1, 2, -1, -0.5
    mad_sat r3.x, r1.y, -c16.w, r0.x  // DetailBump::roughness<0>
    // r3.x = r1.y * 0.5 + r0.x

#line 292 "X:\Planetside2\Main\Code\Application\Graphics\Shaders\character.fx"
    mul r4.z, r4.x, -c16.w
    // r4.z = r4.x * 0.5

    add r0.xy, r0.ywzw, r4.zyzw  // ::v3Bump<0,1>
    // r0.xy = r0.yw + r4.zy

#line 239 "Common.fxh"
    mov r4.xyz, v2  // IN<10,11,12>
    mul r1.yzw, r4.xzxy, v3.xyzx
    mad r1.yzw, r4.xyzx, v3.xzxy, -r1  // ::normal<0,1,2>
    dp3 r0.w, v2, v2
    dp3 r4.x, v3, v3
    add r0.w, r0.w, r4.x
    rsq r0.w, r0.w
    mul r0.w, r0.w, c17.z
    mul r1.yzw, r0.w, r1  // ::normal<0,1,2>
    mul r1.yzw, r1, v2.w  // ::normal<0,1,2>

#line 249
    mul r4.xyz, r0.y, v3
    mad r0.xyw, r0.x, v2.xyzz, r4.xyzz
    mad r0.xyw, r1.x, r1.yzzw, r0
    dp3 r1.x, r0.xyww, r0.xyww
    rsq r1.x, r1.x

#line 51
    mov r4.xyw, v4  // IN<17,18,20>
    mul r1.yz, r4.w, v5.xxyw
    mad r1.yz, r4.xxyw, v5.w, -r1
    mul r1.w, v4.w, v4.w
    rcp r1.w, r1.w
    mul r1.yz, r1.w, r1  // ::CalcMotion<0,1>

#line 340 "GBuffers.fxh"
    mad r0.xyw, r0, r1.x, c16.x
    mul oC1.xyz, r0.xyww, -c16.w  // ::PS<4,5,6>

#line 325
    mad r0.x, r0.z, c17.w, c17.w
    mul r0.x, r0.x, c19.w
    cmp oC3.x, r0.z, r0.x, c20.x  // ::PS<12>

#line 273
    rsq r0.x, r1_abs.y
    rsq r0.y, r1_abs.z
    rcp r0.z, r0.x
    rcp r0.w, r0.y
    cmp r0.xy, -r1.yzzw, c18.z, c18.y
    cmp r1.xy, r1.yzzw, -c18.z, -c18.y
    add r0.xy, r0, r1
    mul r0.xy, r0, r0.zwzw  // ::EncodeMotion<0,1>

#line 335
    mad r0.xy, r0, c17.w, c17.w
    mul oC3.zw, r0.xyxy, c19.w  // ::PS<14,15>  // motion?

#line 73 "Tint.fxh"
    mov r2.w, c3.x
    mov oC0, r2  // ::PS<0,1,2,3>       // albedo

#line 340 "GBuffers.fxh"
    mov oC1.w, c18.z  // ::PS<7>    // normal

#line 308 "Common.fxh"
    mov r3.w, c18.z
    mov oC2, r3.xzyw  // ::PS<8,9,10,11>    // specular/dielectric/metallic

#line 325 "GBuffers.fxh"
    mov oC3.y, c18.z  // ::PS<13>

// approximately 150 instruction slots used (9 texture, 141 arithmetic)
}};
